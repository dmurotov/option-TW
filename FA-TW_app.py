import pandas as pd
import yfinance as yf
import requests
from io import BytesIO
from PIL import Image as PILImage
from IPython.display import display, clear_output
import ipywidgets as widgets
import plotly.graph_objects as go
import matplotlib.pyplot as plt

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (–∑–∞–≥–ª—É—à–∫–∞)
def get_data(ticker):
    try:
        stock = yf.Ticker(ticker)
        _ = stock.info  # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∏–∫–µ—Ä–∞

        # –î–µ–º–æ–¥–∞–Ω–Ω—ã–µ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥)
        data = [
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "P/E (TTM)", "–ó–Ω–∞—á–µ–Ω–∏–µ": "53.67", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Forward P/E", "–ó–Ω–∞—á–µ–Ω–∏–µ": "17.89", "–û—Ü–µ–Ω–∫–∞": "üü° –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "P/B", "–ó–Ω–∞—á–µ–Ω–∏–µ": "1.01", "–û—Ü–µ–Ω–∫–∞": "üü¢ –•–æ—Ä–æ—à–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Quant Rating", "–ó–Ω–∞—á–µ–Ω–∏–µ": "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ", "–û—Ü–µ–Ω–∫–∞": "üîµ –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ"},
        ]
        return data
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
        return None

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
def display_data(data):
    df = pd.DataFrame(data)
    display(df)
    return df

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏ –≤–≤–æ–¥–µ —Ç–∏–∫–µ—Ä–∞
def on_ticker_entered(change):
    clear_output(wait=True)
    display(ticker_input)

    ticker = change['new'].upper()
    data = get_data(ticker)

    if data:
        print(f"\nüìä –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –¥–ª—è {ticker}:\n")
        df = display_data(data)

        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        numeric_df = df.copy()
        numeric_df['–ß–∏—Å–ª–æ'] = pd.to_numeric(
            numeric_df['–ó–Ω–∞—á–µ–Ω–∏–µ'].str.replace(r'[^\d\.\-]', '', regex=True),
            errors='coerce'
        )
        numeric_df = numeric_df.dropna(subset=['–ß–∏—Å–ª–æ'])

        if not numeric_df.empty:
            fig = go.Figure(go.Bar(
                x=numeric_df['–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å'],
                y=numeric_df['–ß–∏—Å–ª–æ'],
                marker_color='teal'
            ))
            fig.update_layout(
                title=f"–ì—Ä–∞—Ñ–∏–∫ —á–∏—Å–ª–æ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –¥–ª—è {ticker}",
                xaxis_title="–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å",
                yaxis_title="–ó–Ω–∞—á–µ–Ω–∏–µ",
                height=500
            )
            fig.show()
        else:
            print("üìâ –ù–µ—Ç —á–∏—Å–ª–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞.")

        # –ó–∞–≥–ª—É—à–∫–∞ Quant Rating
        quant_rating_data = (4.2, "Buy", "green", f"https://logo.clearbit.com/{ticker.lower()}.com")
        print(f"\nüìà Quant Rating: {quant_rating_data[1]} ({quant_rating_data[0]:.2f})")

        # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–≥–æ—Ç–∏–ø
        try:
            response = requests.get(quant_rating_data[3], timeout=3)
            img = PILImage.open(BytesIO(response.content))
            plt.imshow(img)
            plt.axis('off')
            plt.show()
        except Exception as e:
            print("‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–≥–æ—Ç–∏–ø:", str(e))
    else:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∏–∫–µ—Ä–∞ {ticker}")

# –í–∏–¥–∂–µ—Ç –≤–≤–æ–¥–∞ —Ç–∏–∫–µ—Ä–∞
ticker_input = widgets.Text(
    value='AAPL',
    placeholder='–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä',
    description='–¢–∏–∫–µ—Ä:',
    disabled=False
)
display(ticker_input)

# –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
ticker_input.observe(on_ticker_entered, names='value')
