import streamlit as st
import pandas as pd
import yfinance as yf
import requests
from PIL import Image
from io import BytesIO

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ —Ç–∏–∫–µ—Ä–∞
def get_data(ticker):
    try:
        stock = yf.Ticker(ticker)
        stock_info = stock.info

        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
        if not stock_info:
            raise ValueError("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ —Ç–∏–∫–µ—Ä—É")

        # –ü—Ä–∏–º–µ—Ä –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å
        data = [
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "P/E (TTM)", "–ó–Ω–∞—á–µ–Ω–∏–µ": "53.67", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Forward P/E", "–ó–Ω–∞—á–µ–Ω–∏–µ": "17.89", "–û—Ü–µ–Ω–∫–∞": "üü° –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "P/B", "–ó–Ω–∞—á–µ–Ω–∏–µ": "1.01", "–û—Ü–µ–Ω–∫–∞": "üü¢ –•–æ—Ä–æ—à–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "P/S", "–ó–Ω–∞—á–µ–Ω–∏–µ": "0.32", "–û—Ü–µ–Ω–∫–∞": "üü¢ –•–æ—Ä–æ—à–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "P/FCF", "–ó–Ω–∞—á–µ–Ω–∏–µ": "–ù/–î (–æ—Ç—Ä–∏—Ü. FCF)", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "D/E", "–ó–Ω–∞—á–µ–Ω–∏–µ": "0.54", "–û—Ü–µ–Ω–∫–∞": "üü° –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "PEG Ratio", "–ó–Ω–∞—á–µ–Ω–∏–µ": "–ù/–î", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Enterprise Value", "–ó–Ω–∞—á–µ–Ω–∏–µ": "~115 –º–ª–Ω", "–û—Ü–µ–Ω–∫–∞": "üü¢ –•–æ—Ä–æ—à–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Peter Lynch Price (PLP)", "–ó–Ω–∞—á–µ–Ω–∏–µ": "–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω", "–û—Ü–µ–Ω–∫–∞": "üîµ –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Piotroski F-Score", "–ó–Ω–∞—á–µ–Ω–∏–µ": "4 –∏–∑ 9", "–û—Ü–µ–Ω–∫–∞": "üü° –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Altman Z-Score", "–ó–Ω–∞—á–µ–Ω–∏–µ": "-0.75", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Beneish M-Score", "–ó–Ω–∞—á–µ–Ω–∏–µ": "-1.95", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Dividend Yield (%)", "–ó–Ω–∞—á–µ–Ω–∏–µ": "1.75%", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Payout Ratio", "–ó–Ω–∞—á–µ–Ω–∏–µ": "71.43%", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Dividend Growth 5Y", "–ó–Ω–∞—á–µ–Ω–∏–µ": "0%", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Quick Ratio", "–ó–Ω–∞—á–µ–Ω–∏–µ": "0.47", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Current Ratio", "–ó–Ω–∞—á–µ–Ω–∏–µ": "0.47", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Revenue (TTM)", "–ó–Ω–∞—á–µ–Ω–∏–µ": "$137.3 –º–ª–Ω", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Revenue –≤ –∫—Ä–∏–∑–∏—Å—ã", "–ó–Ω–∞—á–µ–Ω–∏–µ": "–ü–∞–¥–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2020: $145 –º–ª–Ω)", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Operating Margin %", "–ó–Ω–∞—á–µ–Ω–∏–µ": "-2.52%", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Net Margin %", "–ó–Ω–∞—á–µ–Ω–∏–µ": "-1.84%", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Net Income", "–ó–Ω–∞—á–µ–Ω–∏–µ": "–£–±—ã—Ç–æ–∫: -$2.53 –º–ª–Ω", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Total Debt", "–ó–Ω–∞—á–µ–Ω–∏–µ": "~25.6 –º–ª–Ω", "–û—Ü–µ–Ω–∫–∞": "üü° –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Total Assets", "–ó–Ω–∞—á–µ–Ω–∏–µ": "$245 –º–ª–Ω", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Total Liabilities", "–ó–Ω–∞—á–µ–Ω–∏–µ": "$194 –º–ª–Ω", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Stockholders' Equity", "–ó–Ω–∞—á–µ–Ω–∏–µ": "$50.3 –º–ª–Ω", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "EPS Estimate (Next Year)", "–ó–Ω–∞—á–µ–Ω–∏–µ": "$0.20", "–û—Ü–µ–Ω–∫–∞": "üü¢ –•–æ—Ä–æ—à–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "ROE (TTM)", "–ó–Ω–∞—á–µ–Ω–∏–µ": "-4.87%", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Buyback (5Y)", "–ó–Ω–∞—á–µ–Ω–∏–µ": "–ù–µ—Ç", "–û—Ü–µ–Ω–∫–∞": "üîµ –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "ROIC", "–ó–Ω–∞—á–µ–Ω–∏–µ": "-2.12%", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Operating CF", "–ó–Ω–∞—á–µ–Ω–∏–µ": "-$4.8 –º–ª–Ω", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Free CF", "–ó–Ω–∞—á–µ–Ω–∏–µ": "-$6.7 –º–ª–Ω", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Short Float", "–ó–Ω–∞—á–µ–Ω–∏–µ": "0.33%", "–û—Ü–µ–Ω–∫–∞": "üü¢ –•–æ—Ä–æ—à–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Institutional Ownership", "–ó–Ω–∞—á–µ–Ω–∏–µ": "38%", "–û—Ü–µ–Ω–∫–∞": "üü¢ –•–æ—Ä–æ—à–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Employees", "–ó–Ω–∞—á–µ–Ω–∏–µ": "92", "–û—Ü–µ–Ω–∫–∞": "üî¥ –ü–ª–æ—Ö–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Retail Stores", "–ó–Ω–∞—á–µ–Ω–∏–µ": "–ù–µ—Ç", "–û—Ü–µ–Ω–∫–∞": "üîµ –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "OpenInsiders", "–ó–Ω–∞—á–µ–Ω–∏–µ": "–ü–æ–∫—É–ø–∫–∞ (–ø–æ—Å–ª–µ–¥–Ω—è—è –≤ –º–∞—Ä—Ç–µ)", "–û—Ü–µ–Ω–∫–∞": "üü¢ –•–æ—Ä–æ—à–æ"},
            {"–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": "Quant Rating", "–ó–Ω–∞—á–µ–Ω–∏–µ": "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ", "–û—Ü–µ–Ω–∫–∞": "üîµ –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ"}
    ]
        return data
    except Exception as e:
        st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∏–∫–µ—Ä–∞ {ticker}. –û—à–∏–±–∫–∞: {str(e)}")
        return None

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ Quant Rating
def get_stock_factors(ticker):
    stock = yf.Ticker(ticker)
    info = stock.info

    value = 5 - min((info.get("forwardPE") or 30) / 10, 5)
    growth = min((info.get("revenueGrowth") or 0.2) * 25, 5)
    profitability = min((info.get("profitMargins") or 0.2) * 25, 5)
    momentum = min((info.get("52WeekChange") or 0.2) * 25, 5)
    eps_revisions = min((info.get("earningsQuarterlyGrowth") or 0.2) * 25, 5)

    return value, growth, profitability, momentum, eps_revisions

def get_rating_label(quant_rating):
    if 4.5 <= quant_rating <= 5.0:
        return "Strong Buy", "darkgreen"
    elif 3.5 <= quant_rating < 4.5:
        return "Buy", "green"
    elif 2.5 <= quant_rating < 3.5:
        return "Hold", "orange"
    elif 1.5 <= quant_rating < 2.5:
        return "Sell", "red"
    else:
        return "Strong Sell", "darkred"

def calculate_quant_rating(ticker):
    try:
        value, growth, profitability, momentum, eps_revisions = get_stock_factors(ticker)

        quant_rating = round(
            (value + growth + profitability + momentum + eps_revisions) / 5, 2
        )
        label, color = get_rating_label(quant_rating)
        return quant_rating, label, color
    except Exception as e:
        return 0, f"–û—à–∏–±–∫–∞: {e}", "black"

# Streamlit –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.title("–ê–Ω–∞–ª–∏–∑ –∞–∫—Ü–∏–π –∏ Quant Rating")

ticker = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä:", "")

if st.button("–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å"):
    if ticker:
        data = get_data(ticker)
        quant_data = calculate_quant_rating(ticker)
        
        if data:
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            df = pd.DataFrame(data)
            st.write(df)

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º Quant Rating
            quant_label, quant_color = quant_data[1], quant_data[2]
            st.markdown(f"**Quant Rating: {quant_label} ({quant_data[0]:.2f})**", unsafe_allow_html=True)
            st.markdown(f'<span style="color:{quant_color}">{quant_label}</span>', unsafe_allow_html=True)
    else:
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä.")
